"""Trialmap of DAQ-HDF files

Electrophysiological recording sessions typically consist of trials. In
different trials, experimental conditions repeat or have other important
similarities. Trialmap information in DAQ-HDF files characterizes each
trial and makes it possible to determine which parts of signal or spike
data corresponds to a particular trial.

The information contained in DAQ-HDF trialmap is:

-   Trial numbers as generated by the stimulation PC;
-   Stimulus numbers (encoded type of stimulation);
-   Outcome number (encoded behavioral data, such as successful or
    unsuccessful performance of the experiment subject in each trial)
-   Timestamps for the start and the end of each trial;

Trialmap is a dataset in the root group of a DAQ-HDF file:

`TRIALMAP` (`struct` array\[T\]):

| Offset    | Name          |   Type    |
|-----|-----------|-------|
| 0   | TrialNo   | `int32` |
| 4   | StimNo    | `int32` |
| 8   | Outcome   | `int32` |
| 12  | StartTime | `int64` |
| 20  | EndTime   | `int64` |

Here, `T` is the total number of trials in the file.

- **TrialNo** is a sequence number generated by the stimulation program and
then transferred to the recording program and stored in the data
acquisition file. This number can be used to combine trialmap
information with whatever other information about the trials from other
sources of data than the DAQ-HDF file itself. If DAQ-HDF file and the
trialmap were created in such a way that the above mentioned
considerations are not applicable, this structure member may be ignored
altogether or, better, filled with a sequence of ascending numbers.

- **StimNo** is so-called Stimulus Number. Trials which have the same stimulus
numbers can be usually grouped together for analysis. So, StimNo
contains some encoded information about the type of trial and, possibly,
some other conditions.

- **Outcome** â€“ behavioral data. Outcome code specifies the type of behavior
observed and discriminated from the experimental subject. Typically,
Outcome member specifies whether the subject performed his task during a
trial successfully or not, and if not, what particular kind of error was
made by him.

- **StartTime** and **EndTime** are timestamps, in nanoseconds, for the beginning
and ending of each trial. All timestamps throughout a DAQ-HDF file have
the same base value, so timestamps from `CONT` and `SPIKE` blocks as well as
the `TRIALMAP`, are comparable with each other. It is typically needed,
based on the timestamps from the TRIALMAP, to determine location of the
corresponding piece of signal within `CONT` or `SPIKE` blocks.

"""

import logging
import h5py
from dh5io.errors import DH5Error
import numpy

TRIALMAP_DATASET_NAME = "TRIALMAP"
logger = logging.getLogger(__name__)


TRIALMAP_DATASET_DTYPE = numpy.dtype(
    [
        ("TrialNo", "int32"),
        ("StimNo", "int32"),
        ("Outcome", "int32"),
        ("StartTime", "int64"),
        ("EndTime", "int64"),
    ]
)


def get_trialmap_from_file(file: h5py.File) -> numpy.ndarray | None:
    numpy.array(file.get(TRIALMAP_DATASET_NAME), dtype=TRIALMAP_DATASET_DTYPE)


def validate_trialmap(file: h5py.File):
    # check for TRIALMAP dataset
    if TRIALMAP_DATASET_NAME not in file:
        logger.info(f"TRIALMAP dataset not found in file {file.filename}")
        return
    validate_trialmap_dataset(file[TRIALMAP_DATASET_NAME])


def validate_trialmap_dataset(trialmap: h5py.Dataset) -> None:
    # trialmap must be a compound dataset with fields 'TrialNo', 'StimNo', 'Outcome', 'StartTime', 'EndTime'
    if not isinstance(trialmap, h5py.Dataset) or trialmap.dtype.names != (
        "TrialNo",
        "StimNo",
        "Outcome",
        "StartTime",
        "EndTime",
    ):
        raise DH5Error(
            f"TRIALMAP dataset is not a named data type with fields 'TrialNo', 'StimNo', 'Outcome', 'StartTime', 'EndTime': {trialmap.dtype}"
        )
